name: Linting

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  changed-files:
    name: Changed Files
    runs-on: ubuntu-latest
    outputs:
      lint-python: ${{ steps.changed-files.outputs.lint-python_any_modified == 'true' }}
      lint-npm: ${{ steps.changed-files.outputs.lint-npm_any_modified == 'true' }}
      lint-rust: ${{ steps.changed-files.outputs.lint-rust_any_modified == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 50 # Assume PRs are less than 50 commits

      - name: Find changed files
        uses: tj-actions/changed-files@v44
        id: changed-files
        with:
          files_yaml: |
            common: &common
              - .github/workflows/linting.yml
              - Makefile

            lint-python:
              - *common
              - server/**
              - '!server/Dockerfile'
              - poetry.lock
              - pyproject.toml

            lint-npm:
              - *common
              - client/**
              - '!client/Dockerfile'
              - package.json
              - package-lock.json

            lint-rust:
              - *common
              - parser/**
              - Cargo.toml
              - Cargo.lock

  python:
    name: Python
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.lint-python == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          set -xe
          make install/python

      - name: Lint with ruff
        run: |
          set -xe
          make lint/python
  npm:
    name: NPM
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.lint-npm == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: |
          set -xe
          make install/npm

      - name: Lint
        run: |
          set -xe
          make lint/npm

  rust:
    name: Rust
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.lint-rust == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          set -xe
          rustup update stable
          rustup default stable

      - name: Install dependencies
        run: |
          set -xe
          make install/rust

      - name: Lint
        run: |
          set -xe
          make lint/rust

  check:
    if: always()
    name: Linting Successful
    runs-on: ubuntu-latest
    needs: [python, npm, rust]

    steps:
      - name: Whether the whole test suite passed
        uses: re-actors/alls-green@v1.2.2
        with:
          allowed-skips: ${{ toJSON(needs) }}
          jobs: ${{ toJSON(needs) }}
