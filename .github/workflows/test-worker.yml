name: Run Test Suite

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  changed-files:
    name: Changed Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 50 # Assume PRs are less than 50 commits

      - name: Find changed files
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            common: &common
              - .github/workflows/linting.yml
              - Makefile

            server-test:
              - *common
              - server/**
              - '!server/Dockerfile'
              - poetry.lock
              - pyproject.toml

            server-build:
              - server/Dockerfile
              - server/src/**

            npm-test:
              - client/**
              - '!client/Dockerfile'

            npm-build:
              - client/src/**
              - client/Dockerfile

            rust:
              - parser/**
              - Cargo.toml
              - Cargo.lock

  server-test:
    name: Server
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.server-test == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          set -xe
          echo "Installed dependencies"
          make install/python

      - name: Testing
        run: |
          set -xe
          make test/python

  server-build:
    name: Server build
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.server-build == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build
        run: |
          set -xe
          docker build . -f server/Dockerfile

  client-test:
    name: Node
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.client-test == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: |
          set -xe
          make install/npm

      - name: Testing
        run: |
          set -xe
          make test/npm

  client-build:
    name: Node build
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.client-build == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build
        run: |
          set -xe
          docker build . -f client/Dockerfile

  rust:
    name: Rust
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.rust == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          set -xe
          rustup update stable
          rustup default stable

      - name: Build
        run: |
          set -xe
          cargo build --verbose

      - name: Test
        run: |
          set -xe
          cargo test --verbose

  check:
    if: always()
    name: Tests Successful
    runs-on: ubuntu-latest
    needs: [server-test, server-build, client-test, client-build, rust]

    steps:
      - name: Whether the whole test suite passed
        uses: re-actors/alls-green@v1.2.2
        with:
          allowed-skips: ${{ toJSON(needs) }}
          jobs: ${{ toJSON(needs) }}
